@c Variables: apl-primer GNU APL Primer project-category
\input texinfo
@c -*-texinfo-*-

@c %**start of header
@setfilename apl-primer.info
@documentencoding UTF-8
@settitle The GNU APL Primer
@c %**end of header

@include version.texi

@copying
Copyright @copyright{} 2022 Christopher Rodriguez

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
copy of the license is included in the section entitled ``GNU Free
Documentation License''.
@end copying

@dircategory Array Languages
@direntry
* GNU APL Primer: (apl-primer).
@end direntry

@titlepage
@title The GNU APL Primer
@author Christopher Rodriguez (yewscion)

@page
@vskip 0pt plus 1filll

@insertcopying
@end titlepage

@contents

@c *********************************************************************
@node Top
@top GNU APL Primer

This document it the GNU APL Primer, version @value{VERSION}.

@menu
* Introduction::                Why a GNU APL primer?

* Algorithms::                  Setting aside the glyphs.

* Concept Index::               Concepts Used, and Where.
* Programming Index::           Functions, Variables, Etc.

* Procedure Types::             Data, Calculations, and Actions.
* GNU FDL::                     The License for this Manual.

@detailmenu
 --- The Detailed Node Listing ---

Introduction
@c add other sections with subsections as above.

Algorithms

* Conjugate::
* Addition::
* Negate::
* Subtraction::
* Signum::
* Times::
* Reciprocal::
* Division::
* Magnitude::
* Modulo::
* Exponential::
* Power::
* Natural Logarithm::
* Logarithm::
* Ceiling::
* Maximum::
* Floor::
* Minimum::
* Factorial::
* Binomial::
* Pi Times::
* Circular Functions::
* Roll::
* Deal::
* Grade Up::
* Grade Down::
* Matrix Inverse::
* Matrix Divide::
* Execute::
* Format::
* Base::
* Represent::
* Expand::
* Scan::
* Replicate::
* Reduce::
* Less Than::
* Greater Than::
* Less Than or Equal To::
* Greater Than or Equal To::
* Equal To::
* Not Equal To::
* Logical Not::
* Logical And::
* Least Common Multiple::
* Logical Or::
* Greatest Common Divisor::
* Logical Nand::
* Logical Nor::
* Depth::
* Match::
* Enlist::
* Member Of::
* Find::
* Index::
* Iota::
* Index Of::
* Shape Of::
* Reshape::
* Reverse::
* Rotate::
* Transpose::
* Rearrange::
* First::
* Take::
* Drop::
* Enclose::
* Partition::
* Mix::
* Pick::
* Ravel::
* Catenate::
* Each::
* Inner Product::
* Outer Product::
* Commute::
* Indices::
* Power Operator::
* Identity::
* Right::
* Hide::
* Left::

@end detailmenu
@end menu

@c *********************************************************************
@node Introduction, Algorithms, Top, Top
@chapter Introduction

The purpose of this document is to provide a single source of documentation
that those interested in using GNU APL as a programming language (and/or
programming environment) can use to get up to speed with the basics as
quickly as possible.

It was started when I wanted to learn GNU APL; I spent, in my opinion, far
too long trying to figure out idiosyncracies and specifics that may have been
left out of this or that source, but were present in the language. As an
example, when I began learning GNU APL, I had the following incomplete and
terse sources of information:

@itemize

@item
The @url{https://aplwiki.com/, APL Wiki}, which has a marked focus toward
Dyalog APL specifically.

@item
@url{https://xpqz.github.io/learnapl/intro.html, "Learning APL"}, again
focused and using Dyalog APL.

@item
Lucas Viera's @url{https://luksamuk.codes/pages/learn-apl.html, "Learn APL
Notes"}, which was useful but terse and focused on usability rather than
understanding.

@item
@url{https://microapl.com/apl_help/ch.htm, "APLX Help"}, which is for a
different (and proprietary) product.

@item
The #apl channel on Libera Chat.

@item
@url{https://codegolf.stackexchange.com/, "Code Golf" on Stack Exchange},
which isn't focused on teaching the language.

@item
@url{https://archive.org/details/apl-2-at-a-glance-brown-pakin-polivka, "APL2
at a Glance"}, a textbook that teaches IBM APL2, which is close (but not
exactly) GNU APL.

@end itemize

The hope is that this document might help someone interested in the language
learn how things work in a more cohesive way, and to make the GNU APL
language more accessible in doing so.

@c *********************************************************************
@node Algorithms
@chapter Algorithms
@include algorithms.texi

@c *********************************************************************
@node Concept Index, Programming Index, Introduction, Top
@chapter Concept Index
@printindex cp

@c *********************************************************************
@node Programming Index, Procedure Types, Concept Index, Top
@chapter Programming Index
@syncodeindex tp fn
@syncodeindex vr fn
@printindex fn

@c *********************************************************************
@node Procedure Types, GNU FDL, Programming Index, Top
@cindex Procedure Types
@include procedure-types.texi

@c *********************************************************************
@node GNU FDL, , Procedure Types, Top
@appendix GNU Free Documentation License
@cindex license, GNU Free Documentation License
@include fdl-1.3.texi

@c *********************************************************************
@bye
